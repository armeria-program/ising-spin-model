{"version":3,"sources":["components/Graphics/index.js","components/Controls/Slider.js","components/Controls/index.js","components/HelpText/index.js","simulation/index.js","simulation/build/vert.js","simulation/build/frag.js","App.js","serviceWorker.js","index.js"],"names":["Graphics","useState","width","setWidth","height","setHeight","onResize","dpr","window","devicePixelRatio","innerWidth","innerHeight","useEffect","addEventListener","id","Slider","name","unit","icon","value","min","max","decimals","onChange","className","toFixed","step","Math","pow","e","v","info","temperature","coupling","field","Controls","state","setState","Object","entries","map","k","key","newState","HelpText","open","setOpen","onClick","gl","currentState","nextState","framebuffer","program","iteration","random_seed","uniforms","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","deleteShader","createTexture","texture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","initializeTexture","data","canvas","i","push","random","texImage2D","RGBA","UNSIGNED_BYTE","Uint8Array","uniform2f","resolution","uniform1f","start","document","getElementById","getContext","vert","VERTEX_SHADER","frag","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","getProgramInfoLog","deleteProgram","positionAttr","getAttribLocation","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","Float32Array","STATIC_DRAW","createScreen","createFramebuffer","getUniformLocation","createUniforms","render","viewport","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","drawArrays","TRIANGLES","temp","requestAnimationFrame","setTimeout","App","setAppState","preventDefault","passive","s","setGLState","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.752b6350.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './index.css';\n\nfunction Graphics() {\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n\n    const onResize = () => {\n        const dpr = window.devicePixelRatio;\n        setWidth(window.innerWidth * dpr);\n        setHeight(window.innerHeight * dpr);\n    }\n\n    // Register event listeners\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        onResize();\n    });\n\n    return <>\n        <canvas id='canvas' width={width} height={height}></canvas>\n    </>;\n}\n\nexport default Graphics;\n","import React from 'react';\nimport BaseSlider from '@material-ui/core/Slider';\nimport './slider.css';\n\nfunction Slider({\n    id,\n    name, unit, icon,\n    value,\n    min, max, decimals,\n    onChange\n}) {\n    return <div className={'slider ' + id}>\n        <p className='name'>\n        {name}\n        </p>\n        <p className='value'>\n        {value.toFixed(decimals)} {unit}\n        <span className='icon'>{icon}</span>\n        </p>\n        <BaseSlider\n            value={value}\n            min={min} max={max} step={Math.pow(10, -decimals)}\n            onChange={(e, v) => onChange(v)}\n        />\n    </div>;\n}\n\nexport default Slider;\n","import React from 'react';\n\nimport {FaThermometerHalf as Thermometer} from 'react-icons/fa';\nimport {AiOutlineSwap as Coupling} from 'react-icons/ai';\nimport {IoIosMagnet as Magnet} from 'react-icons/io';\n\nimport Slider from './Slider.js'\n\nimport './index.css';\n\n// Name, max, step\nconst info = {\n    temperature: {\n        name: 'Temperature',\n        min: 1,\n        max: 800,\n        decimals: 0,\n        unit: 'K',\n        icon: <Thermometer/>,\n    },\n    coupling: {\n        name: 'Coupling Constant',\n        min: 0.2,\n        max: 5,\n        decimals: 2,\n        icon: <Coupling/>,\n    },\n    field: {\n        name: 'External Field Strength',\n        min: -2,\n        max: 2,\n        decimals: 3,\n        unit: 'T',\n        icon: <Magnet/>\n    },\n}\n\nfunction Controls({state, setState}) {\n    return <div id='controls'>{Object.entries(state).map(\n        ([k, v]) => {\n            return <Slider\n                key={k} id={k}\n                value={v}\n                onChange={(v) => {\n                    const newState = {...state};\n                    newState[k] = v;\n                    setState(newState);\n                }}\n                {...info[k]}\n            />;\n         }\n    )}</div>\n}\n\nexport default Controls;\n","import React, {useState} from 'react';\nimport {IoIosMagnet as Magnet} from 'react-icons/io';\nimport './index.css';\n\nfunction HelpText() {\n    const [open, setOpen] = useState(true);\n\n    return <>\n        <div className={'help-container ' + (open ? 'open' : 'closed')}>\n        <div className='help-text'>\n            <div className='header'>\n                <span className='icon'><Magnet/></span>\n                <div className='title'>\n                    Ising Spin Model\n                    <p className='subtitle'>Made with {'<3'} by Samuel J. Li</p>\n                </div>\n            </div>\n            The <b>Ising spin model</b> is a simplified model of ferromagnetic material (e.g. iron) at the microscopic level.\n            Each pixel represents an electron, and its color represents the direction of its spin.\n\n            <p>Each electron is influenced by two opposing forces:</p>\n            <ul>\n                <li><b>Magnetism</b>, which tends to align the spin of each electron with its neighbors and the external magnetic field, and</li>\n                <li><b>Temperature</b>, which causes random flucuations in orientation.</li>\n            </ul>\n            Despite its simplicity, the model exhibits complex behavior, including spontaneous magnetization, magnetic domains, and a Curie temperature.\n            <button onClick={() => setOpen(false)}>Got it!</button>\n            \n        </div></div>\n    </>\n}\n\nexport default HelpText;\n","import fragmentShader from './build/frag.js';\nimport vertexShader from './build/vert.js';\n\nlet gl = null;\n\n\n// Textures for current and next simulation state\nlet currentState = null;\nlet nextState = null;\nlet framebuffer = null;\nlet program = null;\n\n// Hyperparameters of simulation\nlet state = {\n    coupling: 0.5,\n    field: 0,\n    temperature: 273,\n    iteration: 0,\n    random_seed: 0,\n};\n\n// Location of GLSL uniforms.\n// Will be initialized based on state.\nlet uniforms = {};\n\n\n// GLSL Initialization Functions\nfunction createShader(type, source) {\n    let shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    let success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (success) {return shader;}\n\n    // Log failure\n    console.error(gl.getShaderInfoLog(shader));\n    gl.deleteShader(shader);\n}\n\nfunction createProgram() {\n    let vert = createShader(gl.VERTEX_SHADER, vertexShader);\n    let frag = createShader(gl.FRAGMENT_SHADER, fragmentShader);\n\n    program = gl.createProgram();\n    gl.attachShader(program, vert);\n    gl.attachShader(program, frag);\n    gl.linkProgram(program);\n\n    let success = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (success) {gl.useProgram(program);}\n\n    // Log failure\n    console.error(gl.getProgramInfoLog(program));\n    gl.deleteProgram(program);\n}\n\nfunction createScreen() {\n    // Initialize vertex position buffers\n    let positionAttr = gl.getAttribLocation(program, 'a_position');\n    let positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n\n    gl.enableVertexAttribArray(positionAttr);\n    gl.vertexAttribPointer(positionAttr, 2, gl.FLOAT, false, 0, 0);\n\n    // Create two triangles covering entire canvas\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n        -1, -1, 1, -1, -1, 1,\n        -1, 1, 1, -1, 1, 1\n    ]), gl.STATIC_DRAW);\n}\n\nfunction createTexture() {\n    let texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Initialize texture settings\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    initializeTexture();\n    return texture;\n}\n\nfunction createUniforms() {\n    // Initialize float uniforms\n    for (let [key, value] of Object.entries(state)) {\n        uniforms[key] = gl.getUniformLocation(program, 'u_' + key);\n        gl.uniform1f(uniforms[key], value);\n    }\n\n    // Initialize resolution uniform\n    uniforms.resolution = gl.getUniformLocation(program, 'u_resolution');\n}\n\n\n// GLSL Update Functions\nfunction initializeTexture() {\n    // Initialize empty texture\n    let data = []\n    let [width, height] = [gl.canvas.width, gl.canvas.height];\n    for (let i = 0; i < width * height * 4; i++) {\n        data.push((Math.random() < 0.5) ? 0 : 255);\n    }\n    gl.texImage2D(\n        gl.TEXTURE_2D, 0, gl.RGBA,\n        width, height, 0,\n        gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array(data));\n    gl.uniform2f(uniforms.resolution, width, height);\n}\n\nfunction setState(name, value) {\n    state[name] = value;\n    gl.uniform1f(uniforms[name], value);\n}\n\n\n// Main initialization function\nfunction start() {\n    if (gl !== null) {return;}\n\n    // Get WebGL context\n    const canvas = document.getElementById('canvas');\n    gl = canvas.getContext('webgl');\n\n    // Initialize program\n    createProgram();\n    createScreen();\n\n    nextState = createTexture();\n    framebuffer = gl.createFramebuffer();\n    currentState = createTexture();\n\n    createUniforms();\n\n    // Register resize handler\n    window.addEventListener('resize', onResize);\n    onResize();\n\n    render();\n}\n\nfunction onResize() {\n    gl.bindTexture(gl.TEXTURE_2D, currentState);\n    initializeTexture();\n    gl.bindTexture(gl.TEXTURE_2D, nextState);\n    initializeTexture();\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n}\n\nfunction render() {\n    gl.bindTexture(gl.TEXTURE_2D, currentState);\n\n    // Render to texture\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D, nextState, 0\n    );\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    // Render to screen\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    // Swap textures\n    let temp = currentState;\n    currentState = nextState;\n    nextState = temp;\n\n    // Toggle iteration (odd/even)\n    setState('iteration', 1 - state.iteration);\n    setState('random_seed', Math.random());\n\n    requestAnimationFrame(render);\n}\n\n// Timeout to fix iPhone bug\ndocument.addEventListener('DOMContentLoaded', () => setTimeout(start, 100));\n\nexport {setState};\n","export default `\nattribute vec2 a_position;\n\nvarying vec2 v_texCoord;\n\nvoid main() {\n    v_texCoord = (a_position + 1.0) / 2.0;\n    gl_Position = vec4(a_position, 0, 1);\n}\n`;\n","export default `\nprecision highp float;\n\nuniform sampler2D u_spin;\nuniform vec2 u_resolution;\n\nuniform float u_coupling;\nuniform float u_field;\nuniform float u_temperature;\n\nuniform float u_iteration;\nuniform float u_random_seed;\n\nvarying vec2 v_texCoord;\n\nconst float C_BOLTZMANN = 4e-3;\n\nfloat get_spin(float dx, float dy) {\n    return 2.0 * texture2D(\n        u_spin,\n        v_texCoord + vec2(dx, dy) / u_resolution\n    ).x - 1.0;\n}\n\nfloat rand(vec2 co) {\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid main() {\n    float spin = get_spin(0.0, 0.0);\n    float delta_h = 2.0 * spin * (u_coupling * (\n        get_spin(1.0, 0.0)\n        + get_spin(-1.0, 0.0)\n        + get_spin(0.0, 1.0)\n        + get_spin(0.0, -1.0)\n    ) + u_field);\n    float beta = 1.0 / (u_temperature * C_BOLTZMANN);\n    float flip_probability = exp(-max(delta_h, 0.0) * beta);\n\n    // Ensures we never flip two adjacent cells at once\n    bool mask = mod(\n        gl_FragCoord.x + gl_FragCoord.y + u_iteration, 2.0\n    ) < 0.5;\n\n    float new_spin = (spin + 1.0)/2.0;\n    if (mask && (rand(\n        v_texCoord + u_random_seed * vec2(1.0, 3.14159)\n    ) < flip_probability)) {\n        new_spin = 1.0 - new_spin;\n    }\n    gl_FragColor = vec4(new_spin, new_spin, new_spin, 1.0);\n}\n`;\n","import React, {useState, useEffect} from 'react';\n\nimport Graphics from './components/Graphics';\nimport Controls from './components/Controls';\nimport HelpText from './components/HelpText';\n\nimport {setState as setGLState} from './simulation';\n\nimport './App.css';\n\n\nfunction App() {\n\n    const [state, setAppState] = useState({\n        temperature: 273,\n        coupling: 0.5,\n        field: 0,\n    });\n    const setState = (s) => {\n        for (let [k, v] of Object.entries(s)) {\n            setGLState(k, v);\n        }\n        setAppState(s);\n    }\n\n\n    // Prevent zoom on mobile\n    const preventDefault = (e) => e.preventDefault();\n    useEffect(() => {\n        document.addEventListener('gesturestart', preventDefault, {passive: false});\n        document.addEventListener('touchmove', preventDefault, {passive: false});\n    });\n\n    return <>\n        <Graphics/>\n        <Controls state={state} setState={setState}/>\n        <HelpText/>\n    </>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}